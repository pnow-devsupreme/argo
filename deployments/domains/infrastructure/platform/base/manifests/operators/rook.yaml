apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rook-ceph-operator
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://charts.rook.io/release' # Official Rook release repository
    targetRevision: v1.15.7 # Specify the desired version
    chart: rook-ceph
    helm:
      values: |-
        crds:
          enabled: true
        image:
          repository: docker.io/rook/ceph
          pullPolicy: IfNotPresent
          tag: v1.15.7
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 128Mi
        pspEnable: false
        csi:
          enableCSIHostNetwork: true
          provisionerReplicas: 2
          # Enable encryption support
          enableCSIEncryption: true
          # CSI driver resource configurations
          csiRBDProvisionerResource:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          csiRBDPluginResource:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          # Set logging level
          logLevel: "0"
          # Enable volume replication for high availability
          enableVolumeReplication: true
          # Configure topology awareness if needed
          topology:
            enabled: true
            domainLabels:
              - kubernetes.io/hostname
              - topology.kubernetes.io/zone
          provisionerTolerations:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
                  effect: NoSchedule
              pluginTolerations:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
                  effect: NoSchedule
              # Node selection for CSI components
              provisioner:
                nodeSelector:
                  kubernetes.io/hostname: "k8s-master.pnhyd.local"
              plugin:
                nodeSelector:
                  kubernetes.io/hostname: "k8s-master.pnhyd.local"
        # Enable discovery daemon for automatic device discovery
        enableDiscoveryDaemon: true
        discover:
          tolerations:
            - key: node-role.kubernetes.io/control-plane
              operator: Exists
              effect: NoSchedule
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                        - k8s-master.pnhyd.local
        discoveryDaemonInterval: "60m"
        # Set global log level
        logLevel: INFO
        # Configure RBAC
        rbacEnable: true
        securityContext:
          runAsUser: 2016
          runAsGroup: 2016
          fsGroup: 2016
        # Priority class for critical system components
        priorityClassName: system-cluster-critical
        # Node selector for operator placement
        placement:
              all:
                nodeSelector:
                  kubernetes.io/hostname: "k8s-master.pnhyd.local"
                tolerations:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                    effect: NoSchedule
        nodeSelector:
          kubernetes.io/hostname: "k8s-master.pnhyd.local"
        # Tolerations to ensure operator runs on control plane nodes
        tolerations:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: NoSchedule
        # Security context for the operator container
        containerSecurityContext:
          runAsNonRoot: true
          runAsUser: 2016
          runAsGroup: 2016
          capabilities:
            drop: ["ALL"]
  destination:
    server: https://kubernetes.default.svc
    namespace: rook-ceph # As recommended in the documentation
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
